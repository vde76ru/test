<?php
// src/views/admin/monitoring.php
use App\Services\AuthService;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
if (!AuthService::checkRole('admin')) {
    header('Location: /');
    exit;
}
?>

<!-- –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ monitoring-interface –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –≤—ã—à–µ -->
<!-- –≠—Ç–æ —Ç–æ—Ç –∂–µ HTML/CSS/JS –∫–æ–¥, –Ω–æ –≤–Ω—É—Ç—Ä–∏ PHP view -->

<style>
/* –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–∞–π—Ç–æ–º */
.monitoring-container {
    margin-left: 0; /* –û—Ç—Å—Ç—É–ø –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ */
}

@media (max-width: 768px) {
    .grid {
        grid-template-columns: 1fr;
    }
    
    .metric-grid {
        grid-template-columns: 1fr;
    }
}
</style>

<div class="monitoring-container">
    <!-- –í–µ—Å—å HTML –∫–æ–¥ –∏–∑ monitoring-interface -->
</div>

<script>
// –î–æ–±–∞–≤–ª—è–µ–º CSRF —Ç–æ–∫–µ–Ω –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
const csrfToken = '<?= \App\Core\CSRF::token() ?>';

// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º fetch –∑–∞–ø—Ä–æ—Å—ã —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å CSRF
const originalFetch = window.fetch;
window.fetch = function(url, options = {}) {
    if (url.startsWith('/api/')) {
        options.headers = {
            ...options.headers,
            'X-CSRF-Token': csrfToken,
            'X-Requested-With': 'XMLHttpRequest'
        };
    }
    return originalFetch(url, options);
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
function exportReport() {
    if (!lastReport) {
        showNotification('–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É', 'warning');
        return;
    }
    
    const dataStr = JSON.stringify(lastReport, null, 2);
    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);
    
    const exportFileDefaultName = `monitoring-report-${new Date().toISOString()}.json`;
    
    const linkElement = document.createElement('a');
    linkElement.setAttribute('href', dataUri);
    linkElement.setAttribute('download', exportFileDefaultName);
    linkElement.click();
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —ç–∫—Å–ø–æ—Ä—Ç–∞
document.addEventListener('DOMContentLoaded', function() {
    const headerDiv = document.querySelector('.header > div');
    const exportBtn = document.createElement('button');
    exportBtn.className = 'btn';
    exportBtn.style.marginLeft = '10px';
    exportBtn.innerHTML = 'üì• –≠–∫—Å–ø–æ—Ä—Ç';
    exportBtn.onclick = exportReport;
    headerDiv.appendChild(exportBtn);
});
</script>